<?php

/*
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 * 本文区切り
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 */
// 引  数 ／ $post_id : 対象記事ID [必須]
//           $length : 抽出バイト数 [必須]
// 返り値 ／ 記事本文より指定バイト数分抽出した文字列
function honbuntagnasi($postid, $length){
	$postsbu = backupposts();	// 現投稿情報(リスト含)のバックアップ
	// 指定投稿情報の取得
	$post = get_post($postid);
	setup_postdata($post);
	// 投稿記事文章の抽出
	$output = get_the_content();
	$output = strip_tags($output);
	$output = stripslashes($output);
	$output = preg_replace('/(\s\s|　)/','',$output);
	$output = preg_replace( "/^\xC2\xA0/", "", $output );  
	$output = str_replace("&nbsp;", '', $output);	
	$output = mb_strimwidth($output, 0, $length, "...", "UTF-8");	
	backupposts($postsbu);	// 投稿情報(リスト含)の原状復帰
	return $output;
}


/*
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 * タイトル取得
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 */
// 引  数 ／ $post_id : 対象記事ID [必須]
//           $length : 抽出バイト数 [必須]
// 返り値 ／ 記事本文より指定バイト数分抽出した文字列
function titletagnasi($postid, $length){
	$postsbu = backupposts();	// 現投稿情報(リスト含)のバックアップ
	// 指定投稿情報の取得
	$post = get_post($postid);
	setup_postdata($post);
	// 投稿記事文章の抽出
	$output = get_the_title($postid);
	$output = strip_tags($output);
	$output = stripslashes($output);
	$output = preg_replace('/(\s\s|　)/','',$output);
	$output = preg_replace( "/^\xC2\xA0/", "", $output );  
	$output = str_replace("&nbsp;", '', $output);	
	$output = mb_strimwidth($output, 0, $length, "...", "UTF-8");	
	backupposts($postsbu);	// 投稿情報(リスト含)の原状復帰
	return $output;
}

/*
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 * バックアップ
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 */
// 使用例：dateflug(get_the_date($post->ID); 

/*
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 * カテゴリーID取得
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 */
function GetCategoryID( $post_ID ){
    foreach( (get_the_category( $post_ID ) ) as $obj){
        $cat_ID = $obj->category_parent;
        if( strcmp($cat_ID,'0')==0 ){
            $cat_ID = $obj->cat_ID;
        }
    }
    return $cat_ID;
}

//投稿日比較
$TODAY = strtotime(date('Y-m-d'));
function check_new_post($date) {
  global $TODAY;
  $date = strtotime($date);
  $dayDiff = abs($TODAY - $date) / 86400; //(60 * 60 * 24)
  return ($dayDiff < 14);
}
function get_new_flug($date) {
  if(check_new_post( get_post_time('Y-m-d') )) {
    echo '<span class="new">NEW</span>';
  }
}
function get_new_flug_2($date) {
  if(check_new_post( get_post_time('Y-m-d') )) {
    echo '<span class="new">NEW</span>';
  }
}
function get_new_flug_3($date) {
  if(check_new_post( get_post_time('Y-m-d') )) {
    echo '<span class="new_icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50"><defs><style></style></defs><title>side_wg_topics_icon_new</title><polygon class="a" points="23.751 0 0 23.751 0 50 50 0 23.751 0"/><path class="b" d="M16.37888,26.8799a10.72855,10.72855,0,0,0-1.3096-.3301l-4.956-1.0029c-.376-.084-.8965-.2227-1.4414-.399.1152.1001.1152.1001.4219.3599.1533.1387.5126.4678.6894.6436l2.5127,2.5127a12.01285,12.01285,0,0,0,1.21,1.0883l-1.1172,1.1182A11.80341,11.80341,0,0,0,11.293,29.6523L7.33978,25.7002A9.03388,9.03388,0,0,0,6.291,24.7729l1.19438-1.1948a5.93371,5.93371,0,0,0,1.2792.3438l4.8565.9814c.46.0918,1.1035.2446,1.5781.3828-.3291-.2675-.8115-.705-1.1338-1.0263l-2.5742-2.5743a9.35844,9.35844,0,0,0-1.11818-.9956l1.11918-1.1186a9.46556,9.46556,0,0,0,.9951,1.1182L16.54,24.7422a8.11312,8.11312,0,0,0,1.04978.9267Z"/><path class="b" d="M23.07808,20.2876a9.23,9.23,0,0,0-1.041.9346l-2.3906,2.3901c-.459.4595-.6592.6738-.9502.9951a8.75751,8.75751,0,0,0-.9492-1.0722l-4.1446-4.1446a9.58767,9.58767,0,0,0-1.0498-.9267c.32132-.291.52932-.482.9961-.9493l2.3135-2.3134a11.79649,11.79649,0,0,0,.9346-1.042l1.0107,1.0107a9.81115,9.81115,0,0,0-1.041.9346l-2.2061,2.2065,1.5782,1.5782L18,18.0273a10.9877,10.9877,0,0,0,.94138-1.0498l1.0039,1.0049a8.44577,8.44577,0,0,0-1.0498.9414l-1.8691,1.8692L18.834,22.6011l2.29878-2.2984a10.109,10.109,0,0,0,.9258-1.0346Z"/><path class="b" d="M28.65228,14.6064a10.94485,10.94485,0,0,0-.957-.5898l-3.6699-2.0303a13.59691,13.59691,0,0,1-1.2031-.7583c.3525.521.5752.896.7509,1.2105l2.0381,3.6621a9.06023,9.06023,0,0,0,.59772.9492l-1.01952,1.019c-.22948-.1528-.22948-.1528-.9961-.5825l-5.6143-3.1787a10.83723,10.83723,0,0,0-1.2178-.605l1.2246-1.2255a6.02825,6.02825,0,0,0,.9659.6889l3.6308,2.2061c.291.1836.7666.4902,1.0801.7119-.376-.5742-.5361-.8418-.6895-1.1182l-2.1064-3.8071a6.94558,6.94558,0,0,0-.6133-.9492l.9434-.9424a7.63031,7.63031,0,0,0,.9414.5893l3.8076,2.0918c.2529.1451.4443.2603,1.1406.712-.1377-.2139-.1377-.2139-.3594-.5284-.1005-.146-.3369-.5058-.3906-.5898l-2.1748-3.6001a5.8529,5.8529,0,0,0-.6904-.9497l1.2256-1.2261a9.95674,9.95674,0,0,0,.6133,1.2105l3.163,5.6152c.1612.2676.26082.4443.3155.5288a2.7177,2.7177,0,0,0,.29.4595Z"/></svg></span>';
  }
}

?>